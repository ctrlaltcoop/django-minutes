# Generated by Django 4.1.6 on 2023-02-01 14:09

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import minutes.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AgendaMeetingItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=70)),
                ('description', models.TextField()),
            ],
            bases=(models.Model, minutes.models.MeetingItemMixin, minutes.models.MentionMixin),
        ),
        migrations.CreateModel(
            name='Decision',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=70)),
                ('description', models.TextField()),
                ('agenda_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='minutes.agendameetingitem')),
            ],
            bases=(models.Model, minutes.models.AgendaSubItemMixin),
        ),
        migrations.CreateModel(
            name='Meeting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=70)),
                ('date', models.DateTimeField()),
                ('owners', models.ManyToManyField(blank=True, related_name='meetings_owned', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='VoteChoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40)),
                ('color_code', models.IntegerField(default=16711680)),
            ],
        ),
        migrations.CreateModel(
            name='MinutesUser',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='RollCallVote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('decision', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='minutes.decision')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='rollcall_votes', to=settings.AUTH_USER_MODEL)),
                ('vote_class', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='minutes.votechoice')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=70)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('attended', models.BooleanField(default=False)),
                ('meeting', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participants', to='minutes.meeting')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='meeting_participations', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MeetingSeries',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=70)),
                ('description', models.TextField(default='')),
                ('owners', models.ManyToManyField(related_name='meetingseries_owned', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='meeting',
            name='series',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='minutes.meetingseries'),
        ),
        migrations.CreateModel(
            name='AnonymousVote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField()),
                ('decision', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='minutes.decision')),
                ('vote_class', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='minutes.votechoice')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AgendaSubItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=70)),
                ('description', models.TextField()),
                ('agenda_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='minutes.agendameetingitem')),
                ('mentions', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
            bases=(models.Model, minutes.models.AgendaSubItemMixin, minutes.models.MentionMixin),
        ),
        migrations.AddField(
            model_name='agendameetingitem',
            name='meeting',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='minutes.meeting'),
        ),
        migrations.AddField(
            model_name='agendameetingitem',
            name='mentions',
            field=models.ManyToManyField(to=settings.AUTH_USER_MODEL),
        ),
    ]
