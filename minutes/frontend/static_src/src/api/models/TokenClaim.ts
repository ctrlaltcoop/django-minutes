/* tslint:disable */
/* eslint-disable */
/**
 * Minutes API V1
 * django-minutes API specifications
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TokenClaim
 */
export interface TokenClaim {
    /**
     * 
     * @type {string}
     * @memberof TokenClaim
     */
    readonly authTokenKey?: string;
    /**
     * 
     * @type {Date}
     * @memberof TokenClaim
     */
    readonly authTokenExpires?: Date;
    /**
     * 
     * @type {string}
     * @memberof TokenClaim
     */
    readonly refreshTokenKey?: string;
    /**
     * 
     * @type {Date}
     * @memberof TokenClaim
     */
    readonly refreshTokenExpires?: Date;
    /**
     * 
     * @type {string}
     * @memberof TokenClaim
     */
    claimToken: string;
}

export function TokenClaimFromJSON(json: any): TokenClaim {
    return TokenClaimFromJSONTyped(json, false);
}

export function TokenClaimFromJSONTyped(json: any, ignoreDiscriminator: boolean): TokenClaim {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'authTokenKey': !exists(json, 'auth_token_key') ? undefined : json['auth_token_key'],
        'authTokenExpires': !exists(json, 'auth_token_expires') ? undefined : (new Date(json['auth_token_expires'])),
        'refreshTokenKey': !exists(json, 'refresh_token_key') ? undefined : json['refresh_token_key'],
        'refreshTokenExpires': !exists(json, 'refresh_token_expires') ? undefined : (new Date(json['refresh_token_expires'])),
        'claimToken': json['claim_token'],
    };
}

export function TokenClaimToJSON(value?: TokenClaim | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'claim_token': value.claimToken,
    };
}


